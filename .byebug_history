c
Debit.last.update_attributes(:total_expenses => tot + amoun)
amoun = (count.sum) - (ret_amt.sum)
ret_amt
count
c
tot-r
r=ret_amt.sum
rret_amt.sum
ret_amt.sum
ret_amt
tot+ret_amt.sum
tot+ret_amt
ret_amt
count
tot
c
Debit.last.update_attributes(:total_expenses => tot + (count.sum - ret_amt.sum))
tot
count.sum
c
Expense.find(25)
Expense.find(49)
Expense.find(48)
params
c
u.update_attributes(advance_amount: (u.advance_amount-i.total.to_i))
u.advance_amount=0 if u.advance_amount.nil?
u.advance_amount=0 if u.advance_amount.nil?u.advance_amount=0 if u.advance_amount.nil?
u.update_attributes(advance_amount: (u.advance_amount-i.total.to_i))
u = User.find_by(name: i.claimed_by)
i.expense_type == "Advance return"
i
params
parans
c
u.update_attributes(advance_amount: (u.advance_amount+(@expense.total.to_i)))
u.advance_amount=0 if u.advance_amount.nil?
u.advance_amount.nil?
c
u.update_attributes(advance_amount: (u.advance_amount+(@expense.total.to_i)))
u.advance_amount=0 
@expense.total.to_i
@expense.total
u.update_attributes(advance_amount: (u.advance_amount+@expense.total.to_i))
u.update_attributes(advance_amount: (u.advance_amount+(@expense.total.to_i)))
@expense
c
u.update_attributes(advance_amount: (u.advance_amount+@expense.total.to_i))
u
c
u.update_attributes(advance_amount: (u.advance_amount+@expense.total.to_i))
u.advance_amount+@expense.total.to_i
@expense.total
u.advance_amount
u
u.update_attributes(advance_amount: (u.advance_amount+@expense.total))
u = User.find_by(name: user)
user = params[:expense][:claimed_by]
user
c
@expense2
ur
c
ur[0].map{|i| @expense << Expense.where(claimed_by: i.name, expense_type: "Cash in Advance")}
ur.map{|i| @expense << Expense.where(claimed_by: i.name, expense_type: "Cash in Advance")}
@expense =[]
@expense = ur.map{|i| Expense.where(claimed_by: i.name)}
@expense
@expense = ur.each{|i| Expense.where(claimed_by: i.name)}
@expense = ur.each{|i| Expense.where(claimed_by: i.name}
ur.each{|i| Expense.where(claimed_by: i.name"}
ur
c
@expense2 = Expense.where(claimed_by: u[0].name, expense_type: "Cash in Advance")
u
c
user[0].name
user.name
user =User..not(:advance_amount => nil)
User.where.not(:advance_amount => nil).name
User.where.not(:advance_amount => nil)
u = User.where.not(advance_amount: nil).name
u
params
c
 @expense2 = Expense.where(claimed_by: u[0], expense_type: "Cash in Advance")
u = User.where.not(advance_amount: nil).pluck(:name)
 @expense2 = Expense.where(claimed_by: u[0], expense_type: "Cash in Advance")
u = User.where.not(advance_amount: nil)
c
u.update_attributes(:advance_amount => params[:expense][:total])
u = User.find_by(name: params[:expense][:claimed_by])
u = User.find_by(params[:expense][:claimed_by])
u.update_attributes(:advance_amount => params[:expense][:total])
u = User.where(params[:expense][:claimed_by])
User.where(params[:expense][:claimed_by]).update_attributes(:advance_amount => params[:expense][:total])
params
c
params
c
User.session[:id]
params
c
@debit = Debit.where(:date => ("#{Date.today.year}-#{Date.today.strftime('%m')}-01")..("#{Date.today.year}-#{Date.today.strftime('%m')}-31"))
@debit
c
params[:expense][:expense_type]
params
c
params[:expense][:expense_type]
params[:expense][:expense_category]
params[:expense][:claimed_by]
params
c
params
c
params
c
params
c
params
c
 @expense = Expense.where.not(:claim_status => nil).where.not(:claim_status => "Need Approval").order("created_at DESC").last(20)
c
type
name
params
c
params
c
xxxx
expense_params
params
exit
 @expense.update_attributes(expense_params)
@expense
params
c
params
c
approved_amount
tot_amt
params
c
@tot_amt=[]
tot_amt
c
params
c
name = params[:@expen][:claimed_by]
name = params[:expense][:claimed_by]
params[:commit] == "Get history"
params
c
@expense = Expense.where.not(:claim_status => nil).last(10)
c
Debit.last.update_attributes(:total_expenses => tot + count.sum)
tot = Debit.last.total_expenses.nil? ? 0 : Debit.last.total_expenses
count
c
tot = Debit.last.total_expenses
count.sum
count
c
@debit = Debit.where(:date => ("#{Date.today.year}-#{Date.today.strftime('%m')}-01")..("#{Date.today.year}-#{Date.today.strftime('%m')}-31"))
c
@expense1 = Expense.where(:claim_status => "Need Approval")
params
Expense
@expense1
c
exp = ids.map {|i| Expense.find(i)}
{if ids.blank?}
ids.blank?
ids
c
ids.blank?
val.blank?
val
ids
c
       val
ids
c
exp = ids.map {|i| Expense.find(i)}
val
params
 exp 
c
x
exit
a= exp.where(:expense_type=>type).where(:claimed_by=>"User")
a= exp.where(:expense_type=>type) 
a.pluck(:claimed_by)
a.pluck(:name)
a= exp.where(:expense_type=>type) 
 exp.where(:expense_type=>type) 
name
@result
exit
 exp.where(:expense_type=>type).where(:date=>"06-06-2016") 
 exp.where(:expense_type=>type).where(:date=>"2016-06-06".."2016-06-06")
 exp.where(:expense_type=>type).where(:date=>"2016-06-06")
 exp.where(:expense_type=>type)
 exp.where(:expense_type=>type).where(:date=>f_date .. t_date)
f_date
exp.where(:expense_type=>"Food").pluck(:date)
exp.pluck(:expense_type)
exp.pluck[:expense_type]
 exp.where(:expense_type=>type).where(:date=>f_date..t_date)
f_date
type
exp
exit
exp = Expense.where(:claim_status => nil)
exp = Expense.where.not(:claim_status => nil)
@expenses = exp.pluck(:date => f_date..t_date)
@expenses = exp.find_by_expense(:date => f_date..t_date)
@expenses = exp.find_by_date(:date => f_date..t_date)
@expenses = exp.find_by(:date => f_date..t_date)
@expenses = exp.where(:date => f_date..t_date)
params
@expenses = exp.where(:date => f_date..t_date)
 exp = Expense.where(:claim_status => nil)
c
Expense.where(:claim_status => nil)
Expense.where(:claim_status => "")
c
exp
params
c
params[:expense][:expense_type]==""
params[:expense][:expense_type]
params[:expense][:claimed_by]
params[:expense]
params
c
@expenses = exp.where(:claimed_by => name, :expense_type => type, :date => f_date..t_date)
params
c
params
c
params
c
params
c
@expenses = exp.where(:claimed_by => name, :expense_type => type, :date => date)
exp = Expense.where.not(:claim_status => nil)
date = params[:expense][:date]
type = params[:expense][:expense_type]
name = params[:expense][:claimed_by]
params
c
params
c
